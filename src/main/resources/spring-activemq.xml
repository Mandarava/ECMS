<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">
    
    <context:component-scan base-package="com.finance.activemq"/>
    
    <jms:annotation-driven/>
    
    <!-- 真正可以产生Connection的ConnectionFactory，由ActiveMQ提供 -->
    <bean id="activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${activemq.url}"/>
        <property name="userName" value="${activemq.username}"/>
        <property name="password" value="${activemq.password}"/>
        <property name="useAsyncSend" value="false"/>
        <property name="alwaysSessionAsync" value="true"/>
        <property name="useDedicatedTaskRunner" value="false"/>
        <!-- 消息传输监听器 处理网络及服务器异常 -->
        <property name="transportListener">
            <bean class="com.finance.activemq.ActiveMQTransportListener"/>
        </property>
        <property name="trustAllPackages" value="true"/>
        <!--<property name="trustedPackages">
            <list>
                <value>java.lang</value>
                <value>javax.security</value>
                <value>java.util</value>
                <value>org.apache.activemq</value>
                <value>com.finance.activemq</value>
            </list>
        </property>-->
    </bean>
    
    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="connectionFactory"
          class="org.springframework.jms.connection.SingleConnectionFactory">
        <property name="targetConnectionFactory" ref="activeMQConnectionFactory"/>
        <property name="reconnectOnException" value="true"/>
    </bean>
    
    <!-- 使用Jackson2 JSON库实现消息与JSON格式的相互转换 -->
    <bean id="jmsMessageConverter"
          class="org.springframework.jms.support.converter.MappingJackson2MessageConverter"/>
    
    <!-- 定义Queue类型的JmsTemplate -->
    <bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg ref="connectionFactory"/>
        <!-- 非pub/sub模型（发布/订阅），即：队列模型 -->
        <property name="pubSubDomain" value="false"/>
        <property name="defaultDestinationName" value="default_queue"/>
        <property name="sessionTransacted" value="true"/>
        <property name="sessionAcknowledgeMode" value="1"/>
        <property name="explicitQosEnabled" value="true"/>
        <property name="deliveryMode" value="2"/>
        <!--<property name="messageConverter" ref="jmsMessageConverter" />-->
    </bean>
    
    <!-- 定义Queue监听器 -->
    <jms:listener-container destination-type="queue" container-type="default" concurrency="1-10"
                            connection-factory="connectionFactory" acknowledge="transacted"
                            transaction-manager="transactionManager">
        <jms:listener destination="default_queue" ref="queueReceiver" method="handle"/>
        <!--<jms:listener destination="default_queue" ref="consumerMessageListener"/>-->
    </jms:listener-container>
    
    <!-- 定义Topic类型的JmsTemplate -->
    <bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg ref="connectionFactory"/>
        <!-- pub/sub模型（发布/订阅） -->
        <property name="pubSubDomain" value="true"/>
        <property name="defaultDestinationName" value="default_topic"/>
    </bean>
    
    <!-- 定义Topic监听器 -->
    <jms:listener-container destination-type="topic" container-type="default"
                            connection-factory="connectionFactory" acknowledge="auto">
        <jms:listener destination="default_topic" ref="topicReceiver" method="handle"/>
    </jms:listener-container>
    
    <!-- ////////////////////////////////////////////////////////////////////////////////////// -->
    <!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
    <!--<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>
    
    &lt;!&ndash;这个是队列目的地 &ndash;&gt;
    <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg>
            <value>default_queue</value>
        </constructor-arg>
    </bean>
    
    &lt;!&ndash; 消息监听容器 &ndash;&gt;
    <bean id="jmsContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="destination" ref="queueDestination"/>
        <property name="messageListener" ref="consumerMessageListener"/>
        <property name="sessionTransacted" value="true" />
        &lt;!&ndash; 设置固定的线程数 &ndash;&gt;
        <property name="concurrentConsumers" value="2"></property>
        &lt;!&ndash; 设置动态的线程数 &ndash;&gt;
        <property name="concurrency" value="2-5"></property>
    </bean>-->
</beans>